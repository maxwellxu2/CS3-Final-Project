#BlueJ class context
comment0.params=
comment0.target=GameLogic()
comment1.params=
comment1.target=Piece\ getCurrentPlayer()
comment1.text=\r\n\ \ Return\ the\ current\ turn\ holder's\ Piece,\ Piece.BLACK\ or\ Piece.WHITE\r\n
comment10.params=from\ to
comment10.target=java.util.List\ getPath(Point,\ Point)
comment10.text=\r\n\ \ Return\ a\ List\ of\ Points\ that\ form\ a\ straight\ line\ between\ Point\ from\ and\ Point\ to\r\n\ \ This\ line\ can\ be\ horizontal,\ vertical,\ or\ diagonal\r\n\ \ If\ there\ is\ no\ straight\ line\ between\ from\ and\ to,\ return\ an\ empty\ List\r\n
comment11.params=path
comment11.target=boolean\ isPathEmpty(java.util.List)
comment11.text=\r\n\ \ Return\ true\ if\ all\ of\ the\ Points\ on\ path\ are\ empty\ EXCLUDING\ the\ first\ Point\r\n\ \ Return\ false\ if\ the\ path\ is\ size\ 1\r\n\ \ Return\ false\ if\ path\ is\ the\ empty\ List\r\n
comment12.params=piece
comment12.target=java.util.List\ getPieces(Piece)
comment12.text=\r\n\ \ Return\ a\ List\ of\ the\ Points\ that\ contain\ pieces\ that\ match\ the\ specified\ piece\ (Piece.BLACK,\ Piece.WHITE)\r\n
comment13.params=from
comment13.target=java.util.List\ getLegalMoves(Point)
comment13.text=\r\n\ \ Return\ a\ List\ of\ Moves\ that\ are\ legal\ for\ the\ point\ located\ at\ Point\ from\r\n\ \ Return\ the\ empty\ List\ if\ there\ is\ no\ piece\ at\ Point\ from\ or\ if\ the\ Piece\ is\ an\ arrow\r\n\ \ Do\ not\ worry\ about\ the\ currentPlayer.\r\n
comment14.params=piece
comment14.target=java.util.List\ getLegalMoves(Piece)
comment14.text=\r\n\ \ Return\ a\ List\ of\ Moves\ that\ are\ legal\ for\ pieces\ that\ match\ the\ specified\ piece\ (Piece.BLACK,\ Piece.WHITE)\r\n\ \ Do\ not\ worry\ about\ the\ currentPlayer\r\n\ \ Return\ the\ empty\ List\ if\ piece\ is\ an\ arrow\r\n
comment15.params=move
comment15.target=boolean\ isLegalMove(Move)
comment15.text=\r\n\ \ Return\ true\ if\ the\ specified\ Move\ is\ a\ legal\ move\r\n\ \ Do\ not\ worry\ about\ the\ currentPlayer\r\n
comment2.params=piece
comment2.target=void\ setCurrentPlayer(Piece)
comment2.text=\r\n\ \ Setter\ for\ currentPlayer\ instance\ variable\r\n
comment3.params=
comment3.target=int\ getPhase()
comment4.params=num
comment4.target=void\ setPhase(int)
comment5.params=
comment5.target=void\ nextPlayer()
comment5.text=\r\n\ \ Change\ the\ currentPlayer\r\n\ \ \ \ \ \ Piece.BLACK\ ->\ Piece.WHITE\r\n\ \ \ \ \ \ Piece.WHITE\ ->\ Piece.BLACK\r\n
comment6.params=p
comment6.target=Piece\ getPiece(Point)
comment6.text=\r\n\ \ Return\ the\ piece\ that\ is\ on\ the\ board\ at\ the\ specified\ Point\r\n\ \ \ \ \ \ Piece.BLACK,\ Piece.WHITE,\ or\ Piece.ARROW\r\n
comment7.params=piece\ p
comment7.target=void\ setPiece(Piece,\ Point)
comment8.params=from\ to
comment8.target=void\ move(Point,\ Point)
comment8.text=\r\n\ \ Move\ the\ piece\ located\ at\ Point\ from\ to\ Point\ to\r\n
comment9.params=p
comment9.target=boolean\ isEmpty(Point)
comment9.text=\r\n\ \ Return\ true\ if\ there\ is\ no\ piece\ at\ Point\ p\r\n
numComments=16
